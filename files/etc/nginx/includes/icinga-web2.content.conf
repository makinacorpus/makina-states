# MANAGED VIA SALT -- DO NOT EDIT
{% set settings = salt['mc_icinga_web2.settings']() %}
{% set data = salt['mc_utils.json_load'](data) %}
{% if settings.htpasswd %}
{% if settings.htpasswd.startswith('ldap://') %}
auth_ldap "ldap authent";
auth_ldap_servers icingaauth;
{% else %}
auth_basic "authent";
auth_basic_user_file {{settings.htpasswd}};
{% endif %}
allow all;
satisfy any;
{% endif %}
location ~ /\. {
  deny all;
  access_log off;
  log_not_found off;
}

{% if data.get('force_ssl', True) %}
if ($forwarded_ssl_scheme != "https"){
    rewrite ^(.*)$ https://{{data.domain}}$1 permanent;
}
{% endif %}

set $fghttps off;
if ($forwarded_ssl_scheme = "https" ) {
  set $fghttps on;
}

location @php {
  include /etc/nginx/fastcgi_params;
  fastcgi_param HTTPS $fghttps;
  #{% if settings.htpasswd -%}
  fastcgi_param REMOTE_USER $remote_user;
  fastcgi_param AUTH_USER $remote_user;
  #{%- endif %}
  fastcgi_param ICINGAWEB_CONFIGDIR "/etc/icingaweb2";
  fastcgi_split_path_info .*/?([^/]+\.php)?(.*);
  #
  index index.php;
  fastcgi_index index.php;
  fastcgi_param SCRIPT_FILENAME $document_root/index.php;
  #
  fastcgi_pass unix:/var/spool/www/icingaweb2.fpm.sock;
}

location ~ ^(/nagvis/?)((.*\.(xml|gif|html|css|font|img|js|jp.g|png|ico).*))$ {
  alias /usr/share/nagvis/share/;
  try_files $2 =404;
}

location ~ ^/nagvis(.*) {
  include /etc/nginx/fastcgi_params;
  root /usr/share/nagvis/share/;
  index index.php;
  #rewrite ^(/nagvis/?)$ /nagvis/index.php;
  #
  fastcgi_param HTTPS $fghttps;
  #fastcgi_param REMOTE_USER $remote_user;
  fastcgi_param AUTH_USER $remote_user;
  #
  fastcgi_param ICINGAWEB_CONFIGDIR "/etc/icingaweb2";
  fastcgi_split_path_info ^/nagvis/?(.*\.php)?(.*);
  fastcgi_index index.php;
  #
  fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
  #
  fastcgi_pass unix:/var/spool/www/nagvis.fpm.sock;
}

# some css & js must fallback on php (the minified version are
# served by php
location ~ ^(/icingaweb2)?(/(.*\.html|(css|font|img|js)/.*))$ {
  alias /usr/share/icingaweb2/public/;
  try_files $2 @php;
}

# user an error handler to factorize the fastcgi slug
location / {
  error_page 419 = @php;
  return 419;
}
# vim: set et ts=2 sts=2 sw=2:
