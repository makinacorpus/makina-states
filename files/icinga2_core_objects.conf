#
# HOSTGROUP
#
HG_ALL_HOSTS: {}

#
# NOTIFICATIONCOMMANDS
#
NCT_BASE:
  attrs:
    import: ["plugin-notification-command"]
    command: [/usr/bin/printf]
    env:
      ICINGAWEB: "http://localhost"
      NOTIFICATIONTYPE: "$notification.type$"
      SERVICENAME: "$service.name$"
      SERVICEDESC: "$service.name$"
      HOSTDISPLAYNAME: "$host.display_name$"
      HOSTALIAS: "$host.display_name$"
      HOSTNAME: "$host.name$"
      HOSTADDRESS: "$address$"
      HOSTSTATE: "$host.state$"
      SERVICESTATE: "$service.state$"
      LONGDATETIME: "$icinga.long_date_time$"
      SERVICEOUTPUT: "$service.output$"
      HOSTOUTPUT: "$host.output$"
      NOTIFICATIONAUTHORNAME: "$notification.author$"
      NOTIFICATIONCOMMENT: "$notification.comment$"
      USEREMAIL: "$user.email$"
      MX_SERVER: ""
      MX_TOKEN: ""
      MX_ROOM: ""
NC_service_notify_by_email:
  attrs:
    import: ["NCT_BASE"]
    command: [/usr/bin/icinga-service-mail.sh]
NC_host_notify_by_email:
  attrs:
    import: ["NCT_BASE"]
    command: [/usr/bin/icinga-host-mail.sh]
NC_host_notify_by_irc:
  attrs:
    import: ["NCT_BASE"]
    command: [/usr/bin/icinga-host-irc.sh]
NC_service_notify_by_irc:
  attrs:
    import: ["NCT_BASE"]
    command: [/usr/bin/icinga-service-irc.sh]
NCT_MATRIX:
  attrs:
    command: [/usr/bin/icinga_matrix.sh]
    import: ["NCT_BASE"]
NC_host_notify_by_matrix:
  attrs:
    import: ["NCT_MATRIX"]
    command: [/usr/bin/icinga_matrix.sh, "$$MX_TOKEN", "$$MX_SERVER", "$$MX_ROOM", "host"]
NC_service_notify_by_matrix:
  attrs:
    import: ["NCT_MATRIX"]
    command: [/usr/bin/icinga_matrix.sh, "$$MX_TOKEN", "$$MX_SERVER", "$$MX_ROOM", "service"]

#
# Notifs.
#

NT_BASE:
  attrs:
    period: T_24x7
NT_HOST:
  attrs:
    command: NC_host_notify_by_email
    states: [Up, Down]
NT_SERVICE:
  attrs:
    command: NC_service_notify_by_email
    states: [Warning, Unknown, Critical, OK]

NT_HOST_IRC:
  attrs:
    command: NC_host_notify_by_irc
    states: [Up, Down]
NT_SERVICE_IRC:
  attrs:
    command: NC_service_notify_by_irc
    states: [Warning, Unknown, Critical, OK]
NT_HOST_MATRIX:
  attrs:
    command: NC_host_notify_by_matrix
    states: [Up, Down]
NT_SERVICE_MATRIX:
  attrs:
    command: NC_service_notify_by_matrix
    states: [Warning, Unknown, Critical, OK]

# BASE COMMAND
# each constant in constants.conf will be added here
# as a custom variable
C_BASE:
 attrs:
    import: ["plugin-check-command"]
    vars.other_args: ""
    vars.HOSTADDRESS: "$host.address$"
    vars.snmp_port: "161"
    vars.snmp_host: "$host.address$"
    vars.ssh_port: "22"
    vars.ssh_host: "$host.address$"
    vars.TESTMAIL: "TESTUSER + MAIL"
    env.LC_ALL: C
    env.LANG: C
#
# SUBMITS CHECK COMMANDS
#
C_submit-host-check-result:
  attrs:
    import: ["C_BASE"]
    arguments:
      $HOSTNAME$: {}
      $HOSTOUTPUT$: {}
      $HOSTSTATE$: {}
    command: "PluginDir + \"/submit_host_check_result\""
C_submit-service-check-result:
  attrs:
    arguments:
      $HOSTNAME$: {}
      $SERVICEDESC$: {}
      $SERVICEOUTPUT$: {}
      $SERVICESTATE$: {}
    command: "PluginDir + \"/submit_service_check_result\""
    import: ["C_BASE"]
C_process-service-perfdata:
  attrs:
    arguments:
      $HOSTNAME$: {}
      $LASTSERVICECHECK$: {}
      $LASTSERVICESTATE$: {}
      $SERVICEDESC$: {}
      $SERVICEPERFDATA$: {}
      $SERVICESTATE$: {}
    command: "PluginDir + \"/C_process-service-perfdata\""
    import: ["C_BASE"]

#
# TIMEPERIODS
#
T_24x7:
  attrs:
    import: ["legacy-timeperiod"]
    ranges: {friday: '00:00-24:00', monday: '00:00-24:00', saturday: '00:00-24:00',
      sunday: '00:00-24:00', thursday: '00:00-24:00', tuesday: '00:00-24:00', wednesday: '00:00-24:00'}
T_workhours:
  attrs:
    import: ["legacy-timeperiod"]
    ranges: {friday: '09:00-17:00', monday: '09:00-17:00', thursday: '09:00-17:00',
      tuesday: '09:00-17:00', wednesday: '09:00-17:00'}
T_begin_day:
  attrs:
    import: ["legacy-timeperiod"]
    ranges: {friday: '00:00-24:00', monday: '00:00-24:00', saturday: '00:00-24:00',
      sunday: '00:00-24:00', thursday: '00:00-24:00', tuesday: '00:00-24:00', wednesday: '00:00-24:00'}
T_end_day:
  attrs:
    import: ["legacy-timeperiod"]
    ranges: {friday: '00:00-24:00', monday: '00:00-24:00', saturday: '00:00-24:00',
             sunday: '00:00-24:00', thursday: '00:00-24:00', tuesday: '00:00-24:00', wednesday: '00:00-24:00'}


# CHECK COMMANDS
C_ALWAYS_UP:
  attrs:
    import: ["C_BASE"]
    arguments:
      -o: 'PING Not Allowed, always OK'
      -s: '0'
    command: "PluginDir + \"/check_centreon_dummy\""
check_disk_smb:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -c: $ARG5$
      -p: $ARG3$
      -s: $ARG1$
      -u: $ARG2$
      -w: $ARG4$
    command: "PluginDir + \"/check_disk_smb\""
    import: ["C_BASE"]
check_distant_disk_space:
  attrs:
    arguments:
      -C: $ARG1$
      -H: $HOSTADDRESS$
      -c: $ARG4$
      -p: $ARG2$
      -w: $ARG3$
    command: "PluginDir + \"/check_distant_disk_space\""
    import: ["C_BASE"]
check_host_alive:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -c: '5000.0,100%'
      -p: '1'
      -w: '3000.0,80%'
    command: "PluginDir + \"/check_ping\""
    import: ["C_BASE"]
check_hpjd:
  attrs:
    arguments:
      -C: public
      -H: $HOSTADDRESS$
      $other_args$: {}
    command: "PluginDir + \"/check_hpjd\""
    import: ["C_BASE"]
check_http_vhost_uri:
  attrs:
    arguments:
      -H: $hostname$
      -u: $url$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh\""
    import: ["C_BASE"]
check_tcp:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -c: $critical$
      -p: $port$
      -w: $warning$
    command: "PluginDir + \"/check_tcp\""
    import: ["C_BASE"]
check_udp:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -p: $ARG1$
    command: "PluginDir + \"/check_udp\""
    import: ["C_BASE"]
check_https:
  attrs:
    arguments:
      -S: $HOSTADDRESS$
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh\""
    import: ["C_BASE"]
CSSH:
  attrs:
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-C", "$command$",
      "--timeout=$ssh_timeout$",
      "-H", "$ssh_host$" , "-p", "$ssh_port$",
      "-i", "$SSHKEY$", "-l", "$ssh_username$", "-q"]
    import: ["C_BASE"]
# icinga2 quoting idiosyncrasiness
#
C_APACHE_STATUS:
  attrs:
    command: [
      "\"echo \" +CUSTM_ADM_SCRIPTS + \"/check_apachestatus_auto.pl -p $port$ -H $http_host$ -c $critical$ -t $timeout$ -w $warning$ -u $url$\""]
    import: ["C_BASE"]
C_TIMED_APACHE_STATUS:
  attrs:
    command: [
      "\"echo \" +CUSTM_ADM_SCRIPTS + \"/check_apachestatus_auto.pl -p $port$ -H $http_host$ -t $timeout$ -u $url$\""]
    import: ["C_BASE"]
CSSH_TIMED_APACHE_STATUS:
  attrs:
    # handle case where apache listens on an ip
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_apachestatus_auto.pl -p $port$ -H $http_host$ -c $critical$ -t $timeout$ -w $warning$ -u $url$\""]
    import: ["C_BASE"]
CSSH_APACHE_STATUS:
  attrs:
    # handle case where apache listens on an ip
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_apachestatus_auto.pl -p $port$ -H $http_host$ -t $timeout$ -u $url$\""]
    import: ["C_BASE"]
C_NGINX_STATUS:
  attrs:
    command: [
      "CUSTM_ADM_SCRIPTS + \"/check_nginx_status.pl -H $http_host$ -p $port$ --ciritcal=$critical$ --warn=$warning$ -s $http_servername$\""]
    import: ["C_BASE"]
CSSH_CHECK_SAR_PERF:
  attrs:
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_sar_perf.py $sar_profile$\""]
    import: ["C_BASE"]
CSSH_PROCESS:
  attrs:
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "PluginDir + \"/check_procs --ereg-argument-array=$process$ -c $critical$ -w $warning$\""]
    import: ["C_BASE"]
CSSH_LOAD:
  attrs:
    import: ["C_BASE"]
    vars.critical: "50,50,50"
    vars.warning: "30,15,8"
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "PluginDir + \"/check_load -c $critical$ -w $warning$\""]
CSSH_DISK:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "PluginDir + \"/check_disk -c $critical$ -w $warning$ -p $path$\""]
CSSH_NETWORK:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_ifutil.pl -i $interface$ -w $warning$ -c $critical$ -b $ifbw$ -p\""]
C_CHECK_RBL:
  attrs:
    command: [
        "CUSTM_ADM_SCRIPTS + \"/check_rbl.py\"",
        "-w", "$warning$",
        "-c", "$critical$",
        "-h", "$checked_address$"]
    import: ["C_BASE"]
CSSH_CHECK_INOTIFY:
  attrs:
    vars.ssh_timeout: 240
    vars.timeout: 230
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_inotify.py --track=$track$\""]
    import: ["C_BASE"]
CSSH_NGINX_STATUS:
  attrs:
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_nginx_status.pl -H $http_host$ -p $port$ --critical=$critical$ --warn=$warning$ -s $http_servername$\""]
    import: ["C_BASE"]
CSSH_TOMCAT:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C", "\"export LANG=C && export LC_ALL=C && \"+CUSTM_ADM_SCRIPTS + \"/check_tomcat.pl -H $http_host$ -p $port$ -w $warning$ -c $critical$ -l $user$ -a $password$\""]
CSSH_BURP_COUNTERS:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C", "CUSTM_ADM_SCRIPTS + \"/check_burp_counters.py\""]
CSSH_BURP:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C", "CUSTM_ADM_SCRIPTS + \"/check_burp_backup_age.py -H $host.name$ -d $data_dir$ -w $warning$ -c $critical$\""]
C_CHECK_ONE_NAGIOS_ONLY:
  attrs:
    arguments:
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_one_nagios\""
    import: ["C_BASE"]
C_CHECK_PHPFPM:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -c: $ARG4$
      -s: $ARG2$
      -t: '8'
      -u: $ARG1$
      -w: $ARG3$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_phpfpm_status.pl\""
    import: ["C_BASE"]
C_DNS_EXTERNE_ASSOCIATION:
  attrs:
    arguments:
      -H: $hostname$
      -c: '500'
      -a: $dns_address$
      -s: $dnsserver$
      -t: '8'
      -w: '50'
    command: "PluginDir + \"/check_dns\""
    vars.dnsserver: "8.8.8.8"
    vars.dns_address: $HOSTADDRESS$
    import: ["C_BASE"]
C_HTTPS_OPENID_REDIRECT:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh\""
    arguments:
      -c: '500'
      -w: '50'
      -t: '8'
      --critical: $critical$
      --timeout: $timeout$
      --useragent: supervision
      --warning: $warning$
      -H: $hostname$
      -I: $HOSTADDRESS$
      -S: {}
      -e: HTTP/1.1 302 Found
      -s: https://openid.makina-corpus.net/login/login.php
      -u: $url$
CSSH_HTTP_STRING_E:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ -p $port$\""]
CSSH_HTTPS_STRING_E:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ --ssl -p $port$\""]
CSSH_HTTP_STRING_AUTH_E:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ -a $http_auth$ -p $port$\""]
C_HTTP_STRING_E:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ -p $port$\""
C_HTTPS_STRING_E:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ --ssl -p $port$\""
C_HTTP_STRING_AUTH_E:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ -a $http_auth$ -p $port$\""
C_HTTPS_STRING_AUTH_E:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -e $http_expect$ -s $strings$ -u $url$ -a $http_auth$ --ssl -p $port$\""
C_HTTP_STRING:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -p $port$\""
C_HTTPS_STRING:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ --ssl -p $port$\""
C_HTTP_STRING_AUTH:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -a $http_auth$ -p $port$\""
C_HTTPS_STRING_AUTH:
  attrs:
    import: ["C_BASE"]
    command: "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -a $http_auth$ --ssl -p $port$\""
CSSH_HTTP_STRING:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -p $port$\""]
CSSH_HTTPS_STRING:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ --ssl -p $port$\""]
CSSH_HTTP_STRING_AUTH:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -a $http_auth$ -p $port$\""]
CSSH_CHECK_MONGODB:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_mongodb.py --host $mongo_host$ --port $mongo_port$ -A $mongo_action$ --critical $critical$ --warning $warning$ -D\""]
CSSH_CHECK_MONGODB_AUTH:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_mongodb.py --host $mongo_host$ --port $mongo_port$ --user $mongo_user$ --password $mongo_password$ -A $mongo_action$ --critical $critical$ --warning $warning$ -D\""]
CSSH_HTTPS_STRING_AUTH:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_http.sh --critical $critical$ --onredirect follow --timeout $timeout$ --useragent supervision --warning $warning$ -H $http_servername$ -I $http_host$ -s $strings$ -u $url$ -a $http_auth$ --ssl -p $port$\""]
CSSH_REDIS:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_redis.pl -S redis_mode,os,aof_last_write_status,run_id,config_file,aof_last_bgrewrite_status,rdb_last_bgsave_status -H $redis_host$ -p $redis_port$ -x $redis_password$ -a 'connected_clients,blocked_clients' -w ~,~ -c ~,~ -m  -A -R -T -f\""]
C_MAIL_IMAP:
  attrs:
    arguments: {-H: $HOSTADDRESS$, -c: $critical$, -w: $warning$}
    command: "PluginDir + \"/check_imap\""
    import: ["C_BASE"]
C_MAIL_IMAP_SSL:
  attrs:
    arguments:
      --ssl: {}
      -H: $HOSTADDRESS$
      -c: $critical$
      -p: '993'
      -w: $warning$
      $other_args$: {}
    command: "PluginDir + \"/check_imap\""
    import: ["C_BASE"]
C_MAIL_POP:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -c: $critical$
      -w: $warning$
      $other_args$: {}
    command: "PluginDir + \"/check_pop\""
    import: ["C_BASE"]
C_MAIL_POP_SSL:
  attrs:
    arguments:
      --ssl: {}
      -H: $HOSTADDRESS$
      -c: $critical$
      -p: '995'
      -w: $warning$
      $other_args$: {}
    command: "PluginDir + \"/check_pop\""
    import: ["C_BASE"]
CSSH_CHECK_POSTGRESQL:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-t", "$ssh_timeout$",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_postgres_wrapper.sh $pg_args$\""]
C_MAIL_SMTP:
  attrs:
    command: "PluginDir + \"/check_smtp -H '$host.address$'  -c '$critical$' -e '220' -f '$TESTMAIL$' -w '1' -C 'RCPT TO:<'$TESTMAIL$'>' -R '250 2.1.5 Ok' -C 'data' -R '354 End data with <CR><LF>.<CR><LF>' -C '.' -R '250 2.0.0 Ok: queued as'\""
    import: ["C_BASE"]
CSSH_MYSQL_HEALTH:
  attrs:
    import: ["C_BASE"]
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_mysql_health_autoconnect.py --mode $mode$ --warning $warning$ $lookback$ --critical $critical$\""]
C_MAIL_SMTP:
  attrs:
    command: "PluginDir + \"/check_smtp -H '$host.address$'  -c '$critical$' -e '220' -f '$TESTMAIL$' -w '1' -C 'RCPT TO:<'$TESTMAIL$'>' -R '250 2.1.5 Ok' -C 'data' -R '354 End data with <CR><LF>.<CR><LF>' -C '.' -R '250 2.0.0 Ok: queued as'\""
    import: ["C_BASE"]
C_PING:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -w: '3000.0,80%'
      -c: '5000.0,100%'
      -p: '1'
      $other_args$: {}
    command: "PluginDir + \"/check_ping\""
    import: ["C_BASE"]
C_POP3_TEST_SIZE_AND_DELETE:
  attrs:
    command: "CUSTM_ADM_SCRIPTS + \"/check_pop3_cleaner.py -H $HOSTADDRESS$ -c '$critical1$,$critical2$' -d '25' -p $TESTPWD$ -t '10' -u '$TESTMAIL$' -w '$warning1$,$warning2$'\""
    import: ["C_BASE"]
C_PROCESS_IRCBOT_RUNNING:
  attrs:
    arguments: {--command: ircbot.py, -c: '1:', -w: '1:'}
    command: "PluginDir + \"/check_procs\""
    import: ["C_BASE"]
C_SNMP_DISK:
  attrs:
    arguments:
      -H: '$snmp_host$'
      -P: '$snmp_port$'
      -u: $SNMP_USER$
      --snmp-version: 3
      --privpassword: "$SNMP_CRYPT$"
      -p: "$SNMP_PASS$"
      --authprotocol: SHA
      --privprotocol: des
      -c: $critical$
      -w: $warning$
      -d: $path$
      -n: {}
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/centreon_plugins/src/check_centreon_snmp_remote_storage\""
    import: ["C_BASE"]
C_SNMP_LOADAVG:
  attrs:
    arguments:
      -H: '$snmp_host$'
      -P: '$snmp_port$'
      -u: $SNMP_USER$
      --snmp-version: 3
      --privpassword: "$SNMP_CRYPT$"
      -p: "$SNMP_PASS$"
      --authprotocol: SHA
      --privprotocol: des
      -c: 50,50,50
      -w: 30,15,8
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/centreon_plugins/src/check_centreon_snmp_loadaverage\""
    import: ["C_BASE"]
C_SNMP_LOADAVG_MANUBULON:
  attrs:
    arguments:
      -H: $snmp_host$
      -P: $snmp_port$
      -l: $SNMP_USER$
      -x: $SNMP_PASS$
      -X: $SNMP_CRYPT$
      -L: $SNMP_AUTH$,$SNMP_PRIV$
      -T: netsl
      -c: 50,50,50
      -w: 30,15,8
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_load.pl\""
    import: ["C_BASE"]
C_SNMP_MEMORY:
  attrs:
    arguments:
      -H: '$snmp_host$'
      -P: '$snmp_port$'
      -u: $SNMP_USER$
      --snmp-version: 3
      --privpassword: "$SNMP_CRYPT$"
      -p: "$SNMP_PASS$"
      --authprotocol: SHA
      --privprotocol: des
      -c: $critical$
      -w: $warning$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/centreon_plugins/src/check_centreon_snmp_memory\""
    import: ["C_BASE"]
C_SNMP_NETWORK:
  attrs:
    arguments:
      -H: '$snmp_host$'
      -P: '$snmp_port$'
      -u: $SNMP_USER$
      --snmp-version: 3
      --privpassword: "$SNMP_CRYPT$"
      -p: "$SNMP_PASS$"
      --authprotocol: SHA
      --privprotocol: des
      -c: $critical$
      $other_args$: {}
      -i: $interface$
      -n: {}
      -a: "5"
      -w: $warning$
      -T: $bw$
    command: "CUSTM_ADM_SCRIPTS + \"/centreon_plugins/src/check_centreon_snmp_traffic\""
    import: ["C_BASE"]
C_SNMP_MEMORY_MANUBULON:
  attrs:
    arguments:
      -H: $snmp_host$
      -p: $snmp_port$
      -l: $SNMP_USER$
      -x: $SNMP_PASS$
      -X: $SNMP_CRYPT$
      -L: $SNMP_AUTH$,$SNMP_PRIV$
      -c: $critical$
      -w: $warning$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_mem.pl\""
    import: ["C_BASE"]
C_SNMP_PROCESS_CENTREON:
  attrs:
    arguments:
      -P: $SNMP_port$
      -H: $snmp_host$
      --authprotocol: sha
      --privprotocol: des
      --password: $SNMP_PASS$
      --authkey: $SNMP_CRYPT$
      --username: $SNMP_USER$
      -p: $process$
      -w: $warning$
      -c: $critical$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/centreon_plugins/src/check_centreon_snmp_process\""
    import: ["C_BASE"]
C_SNMP_FULLPATH_PROCESS:
  attrs:
    arguments:
      -p: $snmp_port$
      -H: $snmp_host$
      -L: sha,des
      -X: $SNMP_CRYPT$
      -c: $critical$
      -l: $SNMP_USER$
      -n: $process$
      -w: $warning$
      -x: $SNMP_PASS$
      -f: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_process.pl\""
    import: ["C_BASE"]
C_SNMP_PROCESS:
  attrs:
    arguments:
      -p: $snmp_port$
      -H: $snmp_host$
      -L: sha,des
      -X: $SNMP_CRYPT$
      -c: $critical$
      -l: $SNMP_USER$
      -n: $process$
      -w: $warning$
      -x: $SNMP_PASS$
      #$other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_process.pl\""
    import: ["C_BASE"]
C_SNMP_PROCESS_COMPLETE:
  attrs:
    arguments:
      --memory: $ARG4$
      -F: {}
      -P: $snmp_port$
      -H: $snmp_host$
      -L: sha,des
      -X: $SNMP_CRYPT$
      -a: {}
      -c: $ARG3$
      -d: '300'
      -l: $SNMP_USER$
      -n: $ARG1$
      -u: $ARG5$
      -w: $ARG2$
      -x: $SNMP_PASS$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_process.pl\""
    import: ["C_BASE"]
C_SNMP_PROCESS_WITH_MEM:
  attrs:
    arguments:
      --memory: $memory$
      -F: {}
      -H: $snmp_host$
      -P: $snmp_port$
      -L: sha,des
      -X: $SNMP_CRYPT$
      -x: $SNMP_PASS$
      -c: $critical$
      -l: $SNMP_USER$
      -n: $process$
      -w: $warning$
      $other_args$: {}
    command: "CUSTM_ADM_SCRIPTS + \"/check_snmp_process.pl\""
    import: ["C_BASE"]
C_VERIFY_TCP_PORT:
  attrs:
    arguments:
      -H: $HOSTADDRESS$
      -p: $ARG1$
      $other_args$: {}
    command: "PluginDir + \"/check_tcp\""
    import: ["C_BASE"]
EV_SSH_RELANCE_NTP:
  attrs:
    arguments:
      $HOSTADDRESS$: {}
      $HOSTNAME$: {}
      $SERVICEATTEMPT$: {}
      $SERVICEDESC$: {}
      $SERVICESTATE$: {}
      $SERVICESTATETYPE$: {}
    command: "PluginDir + \"/eventhandlers/relance_ntp\""
    import: ["C_BASE"]
CSSH_NTP_TIME:
  attrs:
    # handle case where apache listens on an ip
    import: ["C_BASE"]
    vars.ntp_server: "fr.pool.ntp.org"
    vars.warning: "80"
    vars.critical: "120"
    command: [
      "PluginDir + \"/check_by_ssh\"",
      "--skip-stderr", "-i", "$SSHKEY$",
      "-l", "root", "-q",
      "-H", "$ssh_host$", "-p", "$ssh_port$",
      "-C",
      "CUSTM_ADM_SCRIPTS + \"/check_ntp_time -H $ntp_server$ -w $warning$ -c $critical$\""]
    import: ["C_BASE"]


#
# HOSTS TEMPLATES
#
HT_BASE:
  attrs:
    #vars.n_interval: 600
    check_command: check_host_alive
    check_interval: 2m
    retry_interval: 1m
    check_period: T_24x7
    enable_active_checks: 1
    enable_notifications: 1
    enable_passive_checks: 1
    max_check_attempts: 5

#
# Users
#
U_IRC_Bot:
  type: User

#
# SERVICES TEMPLATES
#
ST_BASE:
  attrs:
    flapping_threshold: "50"
    vars.other_args: ''
    vars.ssh_timeout: 60
    vars.ssh_username: root
    check_interval: '5m'
    retry_interval: '1m'
    check_period: 'T_24x7'
    enable_active_checks: 1
    enable_passive_checks: 1
    enable_notifications: 0
    max_check_attempts: 3
    #vars.n_interval: 0
ST_ALERT:
  attrs:
    enable_notifications: 1
    #vars.n_interval: 0
    import: ["ST_BASE"]
ST_HOURLY:
  attrs:
    check_interval: 3600
    import: ["ST_BASE"]
ST_HOURLY_ALERT:
  attrs:
    import: ["ST_HOURLY"]
    enable_notifications: 1
    #vars.n_interval: 3600
ST_DAILY:
  attrs:
    import: ["ST_BASE"]
    check_interval: 1440m
    max_check_attempts: 6
    retry_interval: 60m
    check_interval: 360m
ST_DAILY_ALERT:
  attrs:
    import: ["ST_DAILY"]
    enable_notifications: 1
    #vars.n_interval: 86400
ST_BURP_COUNTERS:
  attrs:
    check_interval: '120m'
    retry_interval: '30m'
    import: ["ST_ALERT"]
    check_command: CSSH_BURP_COUNTERS
    vars.data_dir: /data/burp
ST_BACKUP_BURP_AGE:
  attrs:
    check_interval: '14400'
    retry_interval: '30m'
    import: ["ST_DAILY_ALERT"]
    check_command: CSSH_BURP
    vars.warning: '2880'
    vars.critical: '4320'
    #vars.n_interval: 7200
    vars.ssh_host: backup.changeme.net
    vars.data_dir: /data/burp
ST_TOMCAT:
  attrs:
    check_interval: '10m'
    retry_interval: '1m'
    import: ["ST_ALERT"]
    check_command: "CSSH_TOMCAT"
    vars.http_host: 127.0.0.1
    vars.port: 8080
    vars.warning: 10%,50
    vars.critical: 5%,50
    vars.user: user
    vars.password: password
ST_SAR:
  attrs:
    import: ["ST_BASE"]
    check_interval: '60'
    retry_interval: '180'
    check_command: "CSSH_CHECK_SAR_PERF"
    vars.warning: 0
    vars.critical: 0
    vars.sar_profile: "cpu"
ST_RBL:
  attrs:
    import: ["ST_BASE"]
    check_interval: '3600'
    retry_interval: '180'
    check_command: "C_CHECK_RBL"
    vars.warning: 1
    vars.critical: 2
ST_NGINX_STATUS:
  attrs:
    import: ["ST_ALERT"]
    vars.http_host: "$HOSTADDRESS$"
    vars.http_servername: "$host.name$"
    vars.port: "80"
    vars.timeout: "8"
    vars.warning: "-1,-1,-1"
    vars.critical: "-1,-1,-1"
    check_command: "C_NGINX_STATUS"
ST_REMOTE_NGINX_STATUS:
  attrs:
    import: ["ST_NGINX_STATUS"]
    check_command: "CSSH_NGINX_STATUS"
    vars.http_host: "127.0.0.1"
ST_APACHE_STATUS:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_APACHE_STATUS"
    vars.http_host: "$HOSTADDRESS$"
    vars.http_servername: "$host.name$"
    vars.url: "http://$http_servername$/server-status"
    vars.port: "80"
    vars.timeout: "8"
    vars.warning: "4"
    vars.critical: "2"
ST_REMOTE_APACHE_STATUS:
  attrs:
    import: ["ST_APACHE_STATUS"]
    check_command: "CSSH_APACHE_STATUS"
    vars.http_host: "127.0.0.1"
ST_TIMED_APACHE_STATUS:
  attrs:
    import: ["ST_APACHE_STATUS"]
    check_command: "C_TIMED_APACHE_STATUS"
    vars.warning: "4"
    vars.critical: "2"
ST_REMOTE_TIMED_APACHE_STATUS:
    import: ["ST_TIMED_APACHE_STATUS"]
    check_command: "CSSH_TIMED_APACHE_STATUS"
    vars.http_host: "127.0.0.1"
ST_CSSH:
  attrs:
    import: ["ST_BASE"]
    check_command: "CSSH"
ST_DRBD:
  attrs:
    import: ["ST_CSSH"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_drbd -d $device$ $other_args$\""
    vars.other_args: ''
    vars.warning: 0
    vars.critical: 0
ST_REDIS:
  attrs:
    check_interval: '140'
    retry_interval: '170'
    import: ["ST_BASE"]
    # switch over authed mongod is done in saltstack state
    check_command: "CSSH_REDIS"
    vars.warning: 0
    vars.critical: 0
    vars.redis_host: 127.0.0.1
    vars.redis_port: 6379
    vars.redis_password: admin
ST_MONGODB:
  attrs:
    check_interval: '140'
    retry_interval: '170'
    import: ["ST_BASE"]
    # switch over authed mongod is done in saltstack state
    check_command: "CSSH_CHECK_MONGODB"
    vars.warning: 0
    vars.critical: 0
    vars.mongo_host: 127.0.0.1
    vars.mongo_port: 27017
    vars.mongo_user: admin
    vars.mongo_password: admin
    vars.mongo_action: test
ST_PROCESSES:
  attrs:
    import: ["ST_ALERT"]
    check_command: "CSSH_PROCESS"
    # include ssh subshells for the check cmd
    vars.warning: "1:"
    vars.critical: "1:"
ST_FULLPATH_PROCESSES:
  attrs:
    import: ["ST_ALERT"]
    check_command: "CSSH_PROCESS"
    # include ssh subshells for the check cmd
    vars.warning: "1:"
    vars.critical: "1:"
ST_SNMPD_MEMORY_CONTROL:
  attrs:
    import: ["ST_BASE"]
    check_command: "C_SNMP_PROCESS_WITH_MEM"
    vars.process: "snmpd"
    vars.warning: "0,1"
    vars.critical: "0,1"
    vars.memory: "256,512"
ST_PROCESS_IRCBOT:
  attrs:
    import: ["ST_HOURLY_ALERT"]
    check_command: "C_PROCESS_IRCBOT_RUNNING"
ST_PING:
  attrs:
    check_interval: '2m'
    import: ["ST_ALERT"]
    check_command: "C_PING"
ST_HAPROXY_STATS:
  attrs:
    check_interval: '10m'
    import: ["ST_CSSH", "ST_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_haproxy_stats.pl -p web -w 80 -c 90\""
ST_ULARGE_DISK_SPACE:
  attrs:
    check_interval: '30m'
    retry_interval: '10m'
    check_command: CSSH_DISK
    import: [ST_HOURLY_ALERT]
    vars.critical: '2%'
    vars.warning: '5%'
    #vars.n_interval: 3600
ST_LARGE_DISK_SPACE:
  attrs:
    check_interval: '30m'
    retry_interval: '10m'
    check_command: CSSH_DISK
    import: [ST_HOURLY_ALERT]
    vars.critical: '10%'
    vars.warning: '4%'
    #vars.n_interval: 3600
ST_DISK_SPACE:
  attrs:
    check_interval: '30m'
    retry_interval: '10m'
    check_command: CSSH_DISK
    import: [ST_HOURLY_ALERT]
    vars.critical: '10%'
    vars.warning: '20%'
    #vars.n_interval: 3600
ST_DNS_REVERSE_ASSOCIATION:
  attrs:
    check_command: C_DNS_EXTERNE_ASSOCIATION
    import: [ST_DNS_ASSOCIATION]
ST_DNS_ASSOCIATION:
  attrs:
    check_command: C_DNS_EXTERNE_ASSOCIATION
    import: [ST_DAILY_ALERT]
ST_DNS_ASSOCIATION_HOSTNAME:
  attrs:
    check_command: C_DNS_EXTERNE_ASSOCIATION
    enable_perfdata: 0
    import: [ST_DNS_ASSOCIATION]
ST_DOUBLE_DAILY_ALERT:
  attrs:
    check_interval: 720m
    import: [ST_ALERT]
    max_check_attempts: 3
    retry_interval: 60m
ST_LOAD_AVG:
  attrs:
    check_command: CSSH_LOAD
    import: ["ST_BASE"]
ST_DDOS:
  attrs:
    import: ["ST_CSSH", "ST_HOURLY_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_ddos.pl -f -w $warning$ -c$critical$\""
    vars.warning: 50
    vars.critical: 60
ST_SNMP_MEMORY:
  attrs:
    check_command: C_SNMP_MEMORY
    import: ["ST_ALERT"]
    vars.critical: '90'
    vars.warning: '80'
ST_POSTGRESQL_PORT:
  attrs:
    check_interval: '900m'
    import: ["ST_BASE"]
    check_command: "check_tcp"
    vars.port: 5432
    vars.warning: 2
    vars.critical: 8
ST_SNMP_MEMORY_LARGE:
  attrs:
    check_command: C_SNMP_MEMORY
    import: ["ST_ALERT"]
    vars.critical: '99'
    vars.warning: '95'
ST_MEMORY:
  attrs:
    import: [ST_ALERT]
    check_command: CSSH
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_mem.pl -u -C -w $warning$ -c $critical$\""
    vars.critical: '90'
    vars.warning: '80'
ST_MEMORY_LARGE:
  attrs:
    import: [ST_ALERT]
    check_command: CSSH
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_mem.pl -u -C -w $warning$ -c $critical$\""
    vars.critical: '99'
    vars.warning: '95'
ST_NTP_PEERS:
  attrs:
    check_interval: '1200m'
    import: ["ST_BASE"]
    check_command: "CSSH"
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_ntp_peer -H $ARG1$ -w 1 -c 10 -j -1:100 -k -1:200 -W 4 -C 10\""

ST_NTP_TIME:
  attrs:
    check_interval: '1200m'
    import: ["ST_BASE", "ST_ALERT"]
    check_command: "CSSH_NTP_TIME"
ST_NIC_CARD:
  attrs:
    check_command: CSSH_NETWORK
    import: ["ST_BASE"]
    vars.interface: eth0
    vars.warning: 100
    vars.ifbw: "100M"
    vars.critical: 100
ST_CRON:
  attrs:
    check_interval: '300m'
    import: ["ST_CSSH", "ST_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_procs -w 1: -c 1: --command cron\""
ST_MAIL_CYRUS_IMAP_CONNECTIONS:
  attrs:
    import: ["ST_CSSH"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_cyrus-imapd -w  $warning$ -c $critical$\""
    vars.warning: 300
    vars.critical: 900
ST_MAIL_SERVER_QUEUES:
  attrs:
    import: ["ST_CSSH"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_postfix_mailqueue -w $warning$ -c $critical$\""
    vars.warning: 50
    vars.critical: 100
ST_MAIL_POP_TEST_ACCOUNT:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_POP3_TEST_SIZE_AND_DELETE"
    vars.warning1: 52488
    vars.critical1: 1048576
    vars.warning2: 100
    vars.critical2: 2000
ST_MAIL_POP_SSL:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_MAIL_POP_SSL"
    vars.warning: 1
    vars.critical: 3
ST_MAIL_SMTP:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_MAIL_SMTP"
    vars.warning: 1
    vars.critical: 3
ST_MAIL_POP:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_MAIL_POP"
    vars.warning: 1
    vars.critical: 3
ST_MAIL_IMAP_SSL:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_MAIL_IMAP_SSL"
    vars.warning: 1
    vars.critical: 3
ST_MAIL_IMAP:
  attrs:
    import: ["ST_ALERT"]
    check_command: "C_MAIL_IMAP"
    vars.warning: 1
    vars.critical: 3
ST_SSH:
  attrs:
    import: ["ST_BASE"]
    check_command: "check_tcp"
    vars.port: 22
    vars.warning: 1
    vars.critical: 4
ST_SWAP:
  attrs:
    check_interval: '2m'
    import: ["ST_CSSH", "ST_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_swap -w $warning$ -c $critical$\""
    vars.critical: '45%'
    vars.warning: '55%'
ST_SUPERVISOR:
  attrs:
    check_interval: '2m'
    import: ["ST_CSSH", "ST_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_supervisorctl.sh $command$\""
    vars.supervisor: "/usr/bin/supervisorctl"
ST_WEB:
  attrs:
    import: [ST_ALERT]
    check_interval: '2m'
    vars.http_host: $HOSTADDRESS$
    vars.http_servername: $host.name$
    vars.warning: '4'
    vars.critical: '6'
    vars.timeout: '8'
    vars.strings: html
    vars.url: /
    #vars.n_interval: 72000
    vars.http_expect: "200"
    # those vars are used inside the salt module
    # check_command: C_HTTP_STRING
    # vars.port: 80
    # vars.http_no_alert: 0
    # vars.http_remote: 0
    # vars.http_expect: "HTTP/1.1 302"
    # vars.http_ssl: 0
    # vars.http_auth: 0
ST_APT:
  attrs:
    import: ["ST_CSSH"]
    check_interval: '14400'
    retry_interval: '4800'
    vars.ssh_timeout: "120"
    vars.command: "PluginDir + \"/negate --timeout 65 --warning=OK \" + CUSTM_ADM_SCRIPTS + \"/check_debian_packages --timeout 60\""
ST_WEB_OPENID:
  attrs:
    check_interval: '5m'
    import: ["ST_WEB"]
    check_command: "C_HTTPS_OPENID_REDIRECT"
ST_POSTGRESQL:
  attrs:
    check_interval: '5m'
    import: ["ST_BASE"]
    check_command: "CSSH_CHECK_POSTGRESQL"
ST_POSTGRESQL_CONNECTION_TIME:
  attrs:
    check_interval: '5m'
    import: ["ST_POSTGRESQL"]
    vars.pg_args: "--action=connection"
ST_MYSQL_HEALTH:
  attrs:
    check_interval: '5m'
    import: ["ST_BASE"]
    check_command: "CSSH_MYSQL_HEALTH"
    vars.lookback: ''
ST_MYSQL_CONNECTION_TIME:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "connection-time"
    vars.warning: "1"
    vars.critical: "5"
ST_MYSQL_TABLE_LOCK_CONTENTION:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "table-lock-contention"
    vars.warning: "1"
    vars.critical: "2"
    vars.lookback: '--lookback 1800'
ST_MYSQL_TABLE_FRAGMENTATION:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "table-fragmentation"
    vars.warning: "1000"
    vars.critical: "2500"
ST_MYSQL_LONG_RUNNING_PROCS:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "long-running-procs"
    vars.warning: "10000"
    vars.critical: "20000"
ST_MYSQL_CONNECTS_ABORTED:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "connects-aborted"
    vars.warning: "1000"
    vars.critical: "5000"
ST_MYSQL_THREADS_CACHED:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "threads-cached"
    vars.warning: "1000"
    vars.critical: "2000"
ST_MYSQL_THREADS_RUNNING:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "threads-running"
    vars.warning: "1000"
    vars.critical: "2000"
ST_MYSQL_THREADS_CONNECTED:
  attrs:
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "threads-connected"
    vars.warning: "1000"
    vars.critical: "2000"
ST_MYSQL_LOG_WAITS:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "log-waits"
    vars.warning: "1000"
    vars.critical: "10000"
ST_MYSQL_THREADS_CREATED:
 attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "threads-created"
    vars.warning: "1000"
    vars.critical: "2000"
ST_MYSQL_BUFFERPOOL_WAIT_FREE:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "bufferpool-wait-free"
    vars.warning: "10000"
    vars.critical: "10000"
ST_MYSQL_INDEX_USAGE:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "index-usage"
    vars.warning: "100"
    vars.critical: "100"
ST_MYSQL_OPEN_FILES:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "open-files"
    vars.warning: "100"
    vars.critical: "100"
ST_MYSQL_TABLECACHE_HITRATE:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "tablecache-hitrate"
    vars.warning: "100"
    vars.critical: "100"
ST_MYSQL_BUFFERPOOL_HITRATE:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "bufferpool-hitrate"
    vars.warning: "100"
    vars.critical: "100"
ST_MYSQL_SLOW_QUERIES:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "slow-queries"
    vars.warning: "10000"
    vars.critical: "10000"
ST_MYSQL_QCACHE_LOWMEM_PRUNES:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "qcache-lowmem-prunes"
    vars.warning: "1000"
    vars.critical: "10000"
ST_MYSQL_TMP_DISK_TABLES:
  attrs:
    check_interval: '5m'
    import: ["ST_MYSQL_HEALTH"]
    vars.mode: "tmp-disk-tables"
    vars.warning: "100"
    vars.critical: "100"
ST_INOTIFY:
  attrs:
    check_interval: '3m'
    import: ["ST_ALERT"]
    check_command: "CSSH_CHECK_INOTIFY"
    vars.track: 500
ST_RAID:
  attrs:
    check_interval: '900m'
    #vars.n_interval: 36000
    import: ["ST_CSSH", "ST_HOURLY_ALERT"]
    vars.command: "CUSTM_ADM_SCRIPTS + \"/check_raid_wrapper.sh\""
ST_MONGODB_CONNECT:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: connect
    vars.warning: 2
    vars.critical: 14
ST_MONGODB_DATABASES:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: databases
    vars.warning: 300
    vars.critical: 500
ST_MONGODB_COLLECTIONS:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: collections
    vars.warning: 300
    vars.critical: 500
ST_MONGODB_INDEX_MISS_RATIO:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: index_miss_ratio
    vars.warning: .005
    vars.critical: .01
ST_MONGODB_LAST_FLUSH_TIME:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: last_flush_time
    vars.warning: 200
    vars.critical: 400
ST_MONGODB_FLUSHING:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: flushing
    vars.warning: 100
    vars.critical: 200
ST_MONGODB_CONNECTIONS:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: connections
    vars.warning:  70
    vars.critical: 80
ST_MONGODB_LOCK:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: lock
    vars.warning: 5
    vars.critical: 10
ST_MONGODB_MEMORY_MAPPED:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: memory_mapped
    vars.warning: 20
    vars.critical: 28
ST_MONGODB_MEMORY:
  attrs:
    import: [ST_MONGODB]
    vars.mongo_action: memory
    vars.warning: 20
    vars.critical: 28
G_Sysadmins:
  attrs:
    members: [U_root]
U_root:
  attrs:
    email: root@localhost
U_bot:
  attrs:
    email: ircbot@localhost
U_matrixbot:
  attrs:
    email: matrix@localhost
# vim: set ft=yaml:
